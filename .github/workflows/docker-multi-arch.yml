name: Publish multi-arch Docker images

on:
  push:
    branches:
      - main
      - devel

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        base: ["jammy"]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Branch used
        id: extract_branch
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "push" ]]; then
            echo "::set-output name=branch::$(echo ${GITHUB_REF##*/})"
          elif [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
            echo "::set-output name=branch::$(echo $GITHUB_BASE_REF)"
          else
            echo "::set-output name=branch::INVALID_EVENT_BRANCH_UNKNOWN"
          fi
      - name: Set Release Tag
        run: |
          ref_name=${{ steps.extract_branch.outputs.branch }}
          echo "ref_name=["$ref_name"]"
          select_date=$(TZ=Europe/Rome date '+%Y-%m-%d')

          declare -A base_images
          base_images[jammy]=ubuntu:jammy
          base_images[focal]=ubuntu:focal

          base = ${{ matrix.base }}
          select_base_image=${base_images[${base}]}
          echo "select_base_image=["$select_base_image"]"

          upmpdcli_version="upmpdcli-1.5.20-libupnpp-0.22.2"
          image_name="${{secrets.DOCKER_USERNAME}}/upmpdcli"

          tags=""
          if [ "${ref_name}" = "devel" ]; then
            echo "devel mode";
            devel_ts=$(TZ=Europe/Rome date '+%Y-%m-%d-%H-%M-%S')
            tags="${image_name}:devel-${base},${image_name}:devel-${base}-${devel_ts}";
          else
            echo "non-devel mode";
            full="${upmpdcli_version}-${base}-${select_date}";
            version_and_base="${upmpdcli_version}-${base}";
            base_only="${base}";
            tags="${image_name}:${base_only},${image_name}:${version_and_base},${image_name}:${full},${image_name}:latest,${image_name}:stable";
          fi
          echo "RELEASE_TAGS=${tags}" >> $GITHUB_ENV
          echo "BASE_IMAGE=${select_base_image}" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            USE_APT_PROXY=N
            BASE_IMAGE=${{ env.BASE_IMAGE }}
          platforms: linux/amd64,linux/arm/v7,linux/arm64/v8
          push: true
          tags: ${{ env.RELEASE_TAGS }}
