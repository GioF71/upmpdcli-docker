name: Publish multi-arch Docker images

on:
  push:
    tags:
      - "release/*"
      - "main/*"
      - "devel/*"
      - "feature/*"
      - "daily/*"

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        base: ["lunar", "jammy"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare for Docker Build
        run: |
          ref_type=${{ github.ref_type }}
          echo "REF_TYPE: ["$ref_type"]"

          ref_name=${{ github.ref_name }}
          echo "REF_NAME: ["$ref_name"]"

          ref=${{ github.ref }}
          echo "REF: ["$ref"]"

          declare -A base_images
          base_images[lunar]=ubuntu:lunar
          base_images[kinetic]=ubuntu:kinetic
          base_images[jammy]=ubuntu:jammy
          base_images[focal]=ubuntu:focal
          base_images[bionic]=ubuntu:bionic

          stable="jammy"
          latest="jammy"
          lts="jammy"
          current="lunar"

          tag_stable="stable"
          tag_latest="latest"
          tag_lts="lts"
          tag_current="current"

          base=${{ matrix.base }}
          select_base_image=${base_images[$base]}
          echo "select_base_image=["$select_base_image"]"

          image_name="${{secrets.DOCKER_USERNAME}}/upmpdcli"

          echo "image_name=["$image_name"]"

          tags=""
          if [ "${ref_type}" = "branch" ]; then
            echo "branch mode";
            if [ "${ref_name}" = "main" ]; then
              echo "main branch";
              tags="${image_name}:main-${base}";
            elif [ "${ref_name}" = "devel" ]; then
              echo "devel branch";
              devel_timestamp=$(TZ=Europe/Rome date '+%Y-%m-%d-%H-%M-%S')
              tags="${image_name}:devel-${base},${image_name}:devel-${base}-${devel_timestamp}";
            else
              echo "other branch ["${ref_name}"]";
              tags="${image_name}:${ref_name}-${base}";
            fi
          elif [ "${ref_type}" = "tag" ]; then
            echo "tag mode";
            echo "tag is ["${ref_name}"]";

            tag_type=$(echo ${ref_name} | cut -d '/' -f 1)
            tag_name=$(echo ${ref_name} | cut -d '/' -f 2) 

            release=${tag_name}

            if [ "${tag_type}" = "release" ]; then
              echo "release tag";
              tags="${image_name}:${base}";
              tags="$tags,${image_name}:${base}-${release}";
              if [ "${base}" = "${latest}" ]; then
                tags="$tags,${image_name}:${tag_latest}";
              fi
              if [ "${base}" = "${stable}" ]; then
                tags="$tags,${image_name}:${tag_stable}";
              fi
              if [ "${base}" = "${lts}" ]; then
                tags="$tags,${image_name}:${tag_lts}";
              fi
              if [ "${base}" = "${current}" ]; then
                tags="$tags,${image_name}:${tag_current}";
              fi
            elif [ "${tag_type}" = "main" ]; then
              echo "main tag";
              tags="${image_name}:main-${tag_name}-${base}";
            elif [ "${tag_type}" = "devel" ]; then
              echo "devel tag";
              tags="${image_name}:devel-${tag_name}-${base}";
            elif [ "${tag_type}" = "feature" ]; then
              echo "feature tag";
              tags="${image_name}:feature-${tag_name}-${base}";
            elif [ "${tag_type}" = "daily" ]; then
              echo "daily build";
              tags="${tags},${image_name}:daily-${base}";
            fi
          fi
          echo "Building tags: ["${tags}"]"
          echo "RELEASE_TAGS=${tags}" >> $GITHUB_ENV
          echo "BASE_IMAGE=${select_base_image}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: |
            USE_APT_PROXY=N
            BASE_IMAGE=${{ env.BASE_IMAGE }}
          platforms: linux/amd64,linux/arm/v7,linux/arm64/v8
          push: true
          tags: ${{ env.RELEASE_TAGS }}
